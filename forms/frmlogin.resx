<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>